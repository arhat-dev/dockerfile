workflow:run:
- name: generate-matrix
  env:
  - LANGUAGES=golang java nodejs python ruby rust
  jobs:
  - name: generate-matrix-base.yml
    shell: |-
      cat <<EOF >scripts/dukkha/matrix-base.yml
      #
      # NOTE: this file is generate by common/dukkha.yaml
      #

      include:
      EOF
      for l in ${LANGUAGES}; do
        cat "${l}/_common/matrix.yml" >>scripts/dukkha/matrix-base.yml
      done

  - name: generate-matrix-container.yml
    shell@template: |-
      {{- $target := (filepath_Join "scripts" "dukkha" "matrix-container.yml") -}}
      {{- $_ := os_WriteFile $target ("include:\n" | toBytes) -}}
      {{- range $_, $lang := .Env.LANGUAGES | splitList " " -}}
        {{- $file := (filepath_Join $lang "_common" "matrix.yml") -}}
        {{- $mat := os_ReadFile $file -}}
        {{- $mat = yq ".[] |= del(.cross_arch)" $mat -}}
        {{- $_ := appendFile $target ($mat | toBytes) -}}
      {{- end -}}

      echo "Done."

buildah:build:
################################
#
# Base
#
################################

- name: linux/base
  env: &base_env
  - IMAGE_NAME_PREFIX=base-
  matrix@file: &matrix scripts/dukkha/matrix-base.yml
  file@template: |-
    {{- if and (ne .Env.MATRIX_CROSS_ARCH "") (ne .Env.MATRIX_ARCH .Env.MATRIX_CROSS_ARCH) -}}
    common/base-cross.dockerfile
    {{- else -}}
    common/base.dockerfile
    {{- end -}}

  image_names@file|template|env: &base_image_names common/templates/image-names.yml
  extra_args@file|template: common/templates/base-extra-args.yml

################################
#
# Builder
#
################################

- name: linux/builder-prepare-dukkha
  matrix@file: *matrix
  file: common/builder.dockerfile
  image_names@env:
  - image: local-dukkha:${MATRIX_ARCH}
  extra_args@env:
  - --target=dukkha
  - --pull-always
  - --build-arg
  - DUKKHA_IMAGE=ghcr.io/arhat-dev/dukkha:latest-${MATRIX_ARCH}
  - --build-arg
  - BASE_IMAGE=scratch
  # not used, just to turn off warning message
  - --build-arg
  - PROGRAMMING_LANGUAGE={{ .Env.MATRIX_LANGUAGE }}

- name: linux/builder
  env: &builder_env
  - IMAGE_NAME_PREFIX=builder-
  matrix@file: *matrix
  hooks:
    before:matrix:
    - task: buildah:build(linux/builder-prepare-dukkha)
  file: common/builder.dockerfile
  image_names@file|template|env: &builder_image_names common/templates/image-names.yml

  extra_args@template: |-
    {{- $prefix := printf "%s/base-%s" .Env.IMAGE_REPO .Env.MATRIX_LANGUAGE -}}
    {{- $tag := printf "%s-%s" .Env.MATRIX_ROOTFS .Env.MATRIX_ARCH -}}
    {{- if and (ne .Env.MATRIX_CROSS_ARCH "") (ne .Env.MATRIX_ARCH .Env.MATRIX_CROSS_ARCH) -}}
      {{- $tag = printf "%s-%s-%s" .Env.MATRIX_ROOTFS .Env.MATRIX_ARCH .Env.MATRIX_CROSS_ARCH -}}
    {{- end -}}

    {{- $base_image_name := printf "%s:%s-%s" $prefix .Env.MATRIX_VERSION $tag -}}
    {{- $base_image_id := os_ReadFile (getBuildahImageIDFile $base_image_name) -}}

    {{- $dukkha_image_name := printf "local-dukkha:%s" .Env.MATRIX_ARCH -}}
    {{- $dukkha_image_id := os_ReadFile (getBuildahImageIDFile $dukkha_image_name) }}

    - --pull-never

    - --build-arg
    - DUKKHA_IMAGE={{ $dukkha_image_id }}

    - --build-arg
    - BASE_IMAGE={{ $base_image_id }}

    - --build-arg
    - PROGRAMMING_LANGUAGE={{ .Env.MATRIX_LANGUAGE }}

################################
#
# Container
#
################################
- name: linux/container
  env: &container_env
  - IMAGE_NAME_PREFIX=
  matrix@file: &container_matrix scripts/dukkha/matrix-container.yml
  file@env: common/container.dockerfile
  image_names@file|template: &container_image_names common/templates/container-image-names.yml
  extra_args@file|template: common/templates/container-extra-args.yml

buildah:push:
- name: linux/base
  env: *base_env
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix@file: *matrix
  image_names@file|template|env: *base_image_names

- name: linux/builder
  env: *builder_env
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix@file: *matrix
  image_names@file|template|env: *builder_image_names

- name: linux/container
  env: *container_env
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix@file: *container_matrix
  image_names@file|template: *container_image_names
