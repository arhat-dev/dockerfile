# this build instruction is used in container
golang:build:
- name: gitlab-shell
  env: &env
  - APP=gitlab-shell
  # source(git-tags): https://gitlab.com/gitlab-org/gitlab-shell
  - VERSION=v13.20.0
  # source(docker): ghcr.io/arhat-dev/gitlab-logger
  - GITLAB_LOGGER_VERSION=1.2.0
  # source(docker): ghcr.io/arhat-dev/gomplate
  - GOMPLATE_VERSION=3.9.0
  matrix:
    kernel:
    - linux
    arch:
    - amd64
    - arm64
    - armv7
    # - armv6
    - armv5
    - s390x
    - mips64le
    - ppc64le
    - x86
    cmd@env|shell: |-
      cd "/app/build/gitlab-shell/cmd"
      find . -mindepth 1 -maxdepth 1 -type d -exec echo '- {}' \;
  chdir@env: /app/build/gitlab-shell
  path@env: ./cmd/${MATRIX_CMD}
  outputs@template|env:
  - /output/gitlab-shell.${MATRIX_KERNEL}.${MATRIX_ARCH}/{{ trimPrefix "./" .Env.MATRIX_CMD }}
  cgo:
    enabled: false
  ldflags@env:
  - -s -w
  # https://gitlab.com/gitlab-org/gitlab-shell/-/blob/main/Makefile#L7
  - -X "main.Version=${VERSION}"
  - -X "main.BuildTime=$(date -u +%Y%m%d.%H%M%S)"
  tags:
  - netgo
  - osusergo
  - tracer_static
  - tracer_static_jaeger
  extra_args:
  - -trimpath
  - -mod=readonly

buildah:build:
- name: gitlab-shell
  env: *env
  matrix@file: &matrix ruby/gitaly-ruby/matrix.yml
  hooks:
    before:
    - shell@env: |-
        [ -d build/gitlab-shell ] && exit 0

        git clone --depth 1 --branch ${VERSION} \
          https://gitlab.com/gitlab-org/gitlab-shell \
          build/gitlab-shell

  file: golang/gitlab-shell/Dockerfile
  image_names@file|template: &image_names |-
    templates/image-names/no-rootfs-info/env[APP:VERSION].yml
  build_args@template:
  - MATRIX_ARCH={{ .Env.MATRIX_ARCH }}
  - GITLAB_LOGGER_VERSION={{ .Env.GITLAB_LOGGER_VERSION }}
  - GOMPLATE_VERSION={{ .Env.GOMPLATE_VERSION }}
  extra_args:
  - --pull-always
  - --cap-add
  - CAP_AUDIT_WRITE

buildah:push:
- name: gitlab-shell
  env: *env
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix@file: *matrix
  image_names@file|template: *image_names
