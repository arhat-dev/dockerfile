# this build instruction is used in container
golang:build:
- name: helm
  env: &env
  - APP=helm
  # source(git-tags): https://github.com/helm/helm
  - VERSION=v3.6.3
  matrix@file: &matrix golang/matrix-nocgo-norootfs-all.yml
  chdir@env: /app/build/${APP}
  path: ./cmd/helm
  outputs@env:
  - /output/${APP}.${MATRIX_KERNEL}.${MATRIX_ARCH}/${APP}
  cgo:
    enabled: false
  ldflags@env:
  - -s -w
  - -X "helm.sh/helm/v3/internal/version.version=${VERSION}"
  # - -X "helm.sh/helm/v3/internal/version.metadata="
  - -X "helm.sh/helm/v3/internal/version.gitCommit=$(git -C /app/build/${APP} rev-parse HEAD)"
  - -X "helm.sh/helm/v3/internal/version.gitTreeState=$(test -n "`git -C /app/build/${APP} status --porcelain`" && printf "dirty" || printf "clean")"
  # Update according to client-go dependency
  #  https://github.com/helm/helm/blob/main/go.mod#L44
  - -X "helm.sh/helm/v3/pkg/lint/rules.k8sVersionMajor=1"
  - -X "helm.sh/helm/v3/pkg/lint/rules.k8sVersionMinor=21"
  - -X "helm.sh/helm/v3/pkg/chartutil.k8sVersionMajor=1"
  - -X "helm.sh/helm/v3/pkg/chartutil.k8sVersionMinor=21"
  tags:
  - netgo
  - osusergo
  extra_args:
  - -trimpath
  - -mod=readonly

buildah:build:
- name: helm
  env: *env
  matrix@file: *matrix
  hooks:
    before:
    - shell@env: |-
        [ -d build/${APP} ] && exit 0

        git clone --depth 1 --branch ${VERSION} \
          https://github.com/helm/helm.git \
          build/${APP}

  file: golang/nocgo-norootfs.dockerfile
  image_names@file|template: &image_names |-
    templates/image-names/no-rootfs-info/env[APP:VERSION].yml
  build_args@file|template: templates/image-build-args/env[APP].yml
  extra_args:
  - --pull-always
  - --layers=true

buildah:push:
- name: helm
  env: *env
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix@file: *matrix
  image_names@file|template: *image_names
