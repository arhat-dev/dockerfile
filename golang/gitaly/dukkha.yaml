# this build instruction is used in container
# WORKDIR /app
golang:build:
- name: gitaly
  env: &env
  - APP=gitaly
  # source(git-tags): https://gitlab.com/gitlab-org/gitaly
  - VERSION=v14.0.5
  matrix:
    kernel:
    - linux
    arch: &arch
    - amd64
    - arm64
    - armv7
    - armv5
    - ppc64le
    - s390x
    - x86
    - mips64le
    cmd@env|shell: |-
      cd "/app/build/${APP}/cmd"
      find . -mindepth 1 -maxdepth 1 -type d -exec echo '- {}' \;
  chdir@env: /app/build/${APP}
  path@env: ./cmd/${MATRIX_CMD}/
  outputs@env:
  - /app/build/${APP}.${MATRIX_KERNEL}.${MATRIX_ARCH}.${MATRIX_CMD}
  cgo:
    enabled: true
    # cflags@template:
    # - -arch={{ getGolangArch .Env.MATRIX_ARCH }}
    # ldflags@template:
    # - -arch={{ getGolangArch .Env.MATRIX_ARCH }}
  ldflags@env:
  - -s -w
  - -extldflags=-static
  # ref: https://gitlab.com/gitlab-org/gitaly/-/blob/master/Makefile#L65
  - -X "gitlab.com/gitlab-org/gitaly/v14/internal/version.version=${VERSION}"
  - -X "gitlab.com/gitlab-org/gitaly/v14/internal/version.buildtime=$(date +"%Y%m%d.%H%M%S")"
  - -X "gitlab.com/gitlab-org/gitaly/v14/internal/version.moduleVersion=$(go list -m)"
  tags:
  - netgo
  - osusergo
  # just in case it requires tzdata
  - timetzdata
  - tracer_static
  - tracer_static_jaeger
  - static
  - system_libgit2
  extra_args:
  - -trimpath
  - -mod=readonly

buildah:build:
- name: gitaly
  env: *env
  matrix@file: &matrix golang/matrix-cgo-all.yml
  hooks:
    before:
    - shell@env: |-
        [ -d build/${APP} ] && exit 0

        git clone --depth 1 --branch ${VERSION} \
          https://gitlab.com/gitlab-org/gitaly \
          build/${APP}

  file: golang/gitaly/Dockerfile
  image_names@file|template: &image_names |-
    templates/image-names/no-rootfs-info/env[APP:VERSION].yml
  extra_args@file|env|template: templates/image-extra-args/env[APP].yml

buildah:push:
- name: gitaly
  env: *env
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix@file: *matrix
  image_names@file|template: *image_names
