# this build instruction is used in container
golang:build:
- name: gitaly
  env: &env
  - APP=gitaly
  # source(docker): ghcr.io/arhat-dev/gitaly-ruby
  - VERSION=14.0.5
  # source(docker): ghcr.io/arhat-dev/gitlab-shell
  - GITLAB_SHELL_VERSION=13.20.0
  matrix:
    kernel:
    - linux
    arch: &arch
    - amd64
    - arm64
    - armv7
    - armv5
    - ppc64le
    # - s390x
    - x86
    - mips64le
    cmd@env|shell: |-
      cd /app/build/gitaly/cmd
      find . -mindepth 1 -maxdepth 1 -type d -exec echo '- {}' \;
  hooks:
    before:
    - shell@template: |-
        cd /app/build/gitaly

        export CGO_ENABLED=1
        export GOOS=linux
        export GOARCH="{{ .Env.MATRIX_ARCH | getGolangArch }}"

        {{ if ne .Env.HOST_ARCH .Env.MATRIX_ARCH }}
        export CC={{ .Env.MATRIX_ARCH | getDebianTripleName }}-gcc
        export CXX={{ .Env.MATRIX_ARCH | getDebianTripleName }}-g++
        {{ end }}

        make libgit2

  chdir@env: /app/build/gitaly
  path@env: ./cmd/${MATRIX_CMD}/
  outputs@template|env:
  - /output/gitaly.${MATRIX_KERNEL}.${MATRIX_ARCH}/{{ trimPrefix "./" .Env.MATRIX_CMD }}
  cgo:
    enabled: true
    # cflags@template:
    # - -arch={{ getGolangArch .Env.MATRIX_ARCH }}
    # ldflags@template:
    # - -arch={{ getGolangArch .Env.MATRIX_ARCH }}
  ldflags@env:
  - -s -w
  - -extldflags=-static
  # ref: https://gitlab.com/gitlab-org/gitaly/-/blob/master/Makefile#L65
  - -X "gitlab.com/gitlab-org/gitaly/v14/internal/version.version=${VERSION}"
  - -X "gitlab.com/gitlab-org/gitaly/v14/internal/version.buildtime=$(date +"%Y%m%d.%H%M%S")"
  - -X "gitlab.com/gitlab-org/gitaly/v14/internal/version.moduleVersion=$(go list -m)"
  tags:
  - netgo
  - osusergo
  # just in case it requires tzdata
  - timetzdata
  - tracer_static
  - tracer_static_jaeger
  - static
  - system_libgit2
  extra_args:
  - -trimpath
  - -mod=readonly

buildah:build:
- name: gitaly
  env: *env
  matrix@file: &matrix ruby/gitaly-ruby/matrix.yml
  hooks:
    before:
    - shell@env: |-
        [ -d build/gitaly ] && exit 0

        git clone --depth 1 --branch v${VERSION} \
          https://gitlab.com/gitlab-org/gitaly \
          build/gitaly

  file: golang/gitaly/Dockerfile
  image_names@file|template: &image_names |-
    templates/image-names/no-rootfs-info/env[APP:VERSION].yml
  extra_args@file|env|template: templates/image-extra-args/env[VERSION].yml
    - --build-arg
    - GITLAB_SHELL_VERSION={{ .Env.GITLAB_SHELL_VERSION }}

buildah:push:
- name: gitaly
  env: *env
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix@file: *matrix
  image_names@file|template: *image_names
