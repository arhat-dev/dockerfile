# this build instruction is used in container
golang:build:
- name: wal-g
  env: &env
  - APP=wal-g
  # source(git-tags): https://github.com/wal-g/wal-g
  - VERSION=v1.0
  - USE_LIBSODIUM=1
  - USE_LZO=1
  matrix:
    kernel:
    - linux
    arch: &arch
    - amd64
    - arm64
    - armv7
    - armv5
    - ppc64le
    - s390x
    - x86
    - mips64le
    cmd@env|shell: |-
      cd /app/build/wal-g/main
      find . -mindepth 1 -maxdepth 1 -type d -exec echo '- {}' \;
  hooks:
    before:
    - shell@template|env: |-
        set -eux

        cd /app/build/wal-g

        {{ if ne .Env.HOST_ARCH .Env.MATRIX_ARCH }}
        export CC={{ .Env.MATRIX_ARCH | getDebianTripleName }}-gcc
        export CXX={{ .Env.MATRIX_ARCH | getDebianTripleName }}-g++
        {{- end }}

        make link_external_deps

  chdir@env: /app/build/wal-g
  path@template: ./main/{{ trimPrefix "./" .Env.MATRIX_CMD }}
  outputs@template|env:
  - /output/wal-g.${MATRIX_KERNEL}.${MATRIX_ARCH}/wal-g.{{ trimPrefix "./" .Env.MATRIX_CMD }}
  cgo:
    enabled: true
  ldflags@template|env:
  - -s -w
  # not able to static link glibc
  - -extldflags=-static
  # ref: https://github.com/wal-g/wal-g/blob/master/Makefile#L38
  - -X "github.com/wal-g/wal-g/cmd/{{ trimPrefix "./" .Env.MATRIX_CMD }}.buildDate=$(date -u +%Y.%m.%d_%H:%M:%S)"
  - -X "github.com/wal-g/wal-g/cmd/{{ trimPrefix "./" .Env.MATRIX_CMD }}.gitRevision=$(git -C /app/build/wal-g rev-parse --short HEAD)"
  - -X "github.com/wal-g/wal-g/cmd/{{ trimPrefix "./" .Env.MATRIX_CMD }}.walgVersion=$(git -C /app/build/wal-g tag -l --points-at HEAD)"
  tags:
  - brotli
  - libsodium
  - lzo
  - netgo
  - osusergo
  # just in case it requires tzdata
  - timetzdata
  extra_args:
  - -trimpath
  - -mod=vendor

buildah:build:
- name: wal-g
  env: *env
  matrix: &matrix
    kernel:
    - linux
    arch: *arch
  hooks:
    before:
    - shell@env: |-
        [ -d build/wal-g ] && exit 0

        git clone --recursive --depth 1 -b ${VERSION} \
          https://github.com/wal-g/wal-g.git \
          build/wal-g

        cd build/wal-g
        GOPROXY=direct GOSUMDB=off go mod vendor -v

        sed_cmd="sed"
        if command -v gsed ; then
          sed_cmd="gsed"
        fi

  file: golang/wal-g/Dockerfile
  image_names@file|template: &image_names |-
    templates/image-names/no-rootfs-info/env[APP:VERSION].yml
  build_args@template:
  - APP={{ .Env.APP }}
  - MATRIX_ARCH={{ .Env.MATRIX_ARCH }}
  - HOST_ARCH={{ .Env.HOST_ARCH }}
  - MATRIX_KERNEL={{ .Env.MATRIX_KERNEL }}
  - TARGET_DEBIAN_ARCH={{ getDebianArch .Env.MATRIX_ARCH }}
  extra_args@template:
  - --pull-always
  # set ulimit or libsodium test will fail
  - --ulimit
  - memlock=16384,nofile=1048576

buildah:push:
- name: wal-g
  env: *env
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix: *matrix
  image_names@file|template: *image_names
