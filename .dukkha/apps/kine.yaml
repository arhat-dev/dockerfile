golang:build:
- name: kine
  matrix@file: &matrix .dukkha/specs/cgo-app-matrix-all.yml
  chdir: /app/build/kine
  path: ./
  hooks:
    after:matrix:success@env:
    - shell: |-
        file /app/build/kine.${MATRIX_KERNEL}.${MATRIX_ROOTFS}.${MATRIX_ARCH}
  cgo:
    # sqlite driver requires cgo
    enabled: true
  outputs@env:
  - /app/build/kine.${MATRIX_KERNEL}.${MATRIX_ROOTFS}.${MATRIX_ARCH}
  ldflags:
  - -s -w
  extra_args:
  - -v
  - -trimpath
  - -mod=readonly

buildah:bud:
- name: kine
  matrix@file: *matrix
  hooks:
    before:
    - shell: |-
        [ -d build/kine ] && exit 0

        git clone -b v0.6.1 \
          https://github.com/k3s-io/kine.git \
          build/kine

  dockerfile: app/golang-cgo.dockerfile
  image_names@env: &image_names
  - image: ghcr.io/arhat-dev/kine:latest-${MATRIX_ARCH}
    manifest: ghcr.io/arhat-dev/kine:latest
  - image: ghcr.io/arhat-dev/kine:$(git -C build/kine describe --tags | tr -d '[:space:]')-${MATRIX_ARCH}
    manifest: ghcr.io/arhat-dev/kine:$(git -C build/kine describe --tags | tr -d '[:space:]')
  extra_args@env:
  - --pull-always
  - --build-arg="APP=kine"
  - --build-arg="MATRIX_ROOTFS=${MATRIX_ROOTFS}"
  - --build-arg="MATRIX_ARCH=${MATRIX_ARCH}"

buildah:push:
- name: kine
  hooks:
    before:
    - task: buildah:login:ghcr
  matrix@file: *matrix
  image_names@env: *image_names
