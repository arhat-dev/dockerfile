buildah:bud:
- name: spilo-base
  env: &env
  - APP=spilo
  # source: https://github.com/zalando/spilo.git
  - VERSION=2.0-p7
  matrix: &matrix
    kernel:
    - linux
    arch:
    - amd64
  hooks:
    before:
    - shell@env: |-
        [ -d build/${APP} ] && exit 0

        git clone --branch ${VERSION} \
          https://github.com/zalando/spilo.git \
          build/${APP}

  dockerfile@env: build/${APP}/postgres-appliance/Dockerfile
  context@env: build/${APP}/postgres-appliance
  image_names@env:
  - image: spilo-base:${MATRIX_ARCH}

  extra_args@env:
  - --build-arg
  # source: https://github.com/timescale/timescaledb
  - TIMESCALEDB=2.3.0
  - --build-arg
  - BASE_IMAGE=registry.opensource.zalan.do/library/ubuntu-18.04
  - --build-arg
  - PGVERSION=13
  - --build-arg
  - PGOLDVERSIONS='9.6 10 11 12'
  - --build-arg
  - DEMO=false
  - --build-arg
  - TIMESCALEDB_APACHE_ONLY=false
  # required, or buildah bud will fail due to unable to find
  # image resulted from `builder-false` stage
  - --layers=true

- name: spilo
  env: *env
  matrix: *matrix
  hooks:
    before:matrix:
    - task: buildah:bud(spilo-base)
  dockerfile: app/spilo.dockerfile
  image_names@file|env: &image_names |-
    templates/image-names/no-rootfs-info/env[APP:VERSION].yml
  extra_args@template: |-
    {{- $base_image_name := printf "spilo-base:%s" .Env.MATRIX_ARCH -}}
    {{- $base_image_id := os_ReadFile (getBuildahImageIDFile $base_image_name) -}}
    - --pull-never
    - --build-arg
    - BASE_IMAGE={{ $base_image_id }}

buildah:push:
- name: spilo
  env: *env
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix: *matrix
  image_names@file|env: *image_names
