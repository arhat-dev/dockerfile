buildah:build:
- name: linux/builder-prepare
  matrix@file: &matrix .dukkha/specs/matrix-linux.yml
  file@env: |-
    builder/${MATRIX_LANGUAGE}/${MATRIX_ROOTFS}-${MATRIX_ARCH}.dockerfile
  image_names@env:
  - image: prepare-${MATRIX_LANGUAGE}:${MATRIX_ROOTFS}-${MATRIX_ARCH}
  extra_args@env:
  - --target=dukkha
  - --pull-always
  - --build-arg
  - DUKKHA_IMAGE=ghcr.io/arhat-dev/dukkha:latest-${MATRIX_ARCH}
  - --build-arg
  - BASE_IMAGE=scratch

- name: linux/builder
  matrix@file: *matrix
  hooks:
    before:matrix@template:
    - shell: |-
        sh scripts/${MATRIX_LANGUAGE}/builder-create-dockerfile.sh \
          {{ getDockerHubArch (.Env.MATRIX_ARCH | default "amd64") }}
    - task: buildah:build(linux/builder-prepare)

    after:matrix:success:
    - shell: |-
        rm "builder/${MATRIX_LANGUAGE}/${MATRIX_ROOTFS}-${MATRIX_ARCH}.dockerfile"
    after:matrix:failure:
    - shell: |-
        cat "builder/${MATRIX_LANGUAGE}/${MATRIX_ROOTFS}-${MATRIX_ARCH}.dockerfile"

  file@env: |-
    builder/${MATRIX_LANGUAGE}/${MATRIX_ROOTFS}-${MATRIX_ARCH}.dockerfile

  image_names@env: &image_names
  - image: ${IMAGE_REPO}/builder-${MATRIX_LANGUAGE}:${MATRIX_ROOTFS}-${MATRIX_ARCH}
    manifest: ${IMAGE_REPO}/builder-${MATRIX_LANGUAGE}:${MATRIX_ROOTFS}

  extra_args@env|template: |-
    {{- \$base_image_name := "${IMAGE_REPO}/base-${MATRIX_LANGUAGE}:${MATRIX_ROOTFS}-${MATRIX_ARCH}" -}}
    {{- \$base_image_id := os_ReadFile (getBuildahImageIDFile \$base_image_name) -}}

    {{- \$dukkha_image_name := "prepare-${MATRIX_LANGUAGE}:${MATRIX_ROOTFS}-${MATRIX_ARCH}" -}}
    {{- \$dukkha_image_id := os_ReadFile (getBuildahImageIDFile \$dukkha_image_name) -}}

    - --pull-never
    - --build-arg
    - DUKKHA_IMAGE={{ \$dukkha_image_id }}
    - --build-arg
    - BASE_IMAGE={{ \$base_image_id }}

buildah:push:
- name: linux/builder
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix@file: *matrix
  image_names@env: *image_names
