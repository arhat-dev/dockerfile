buildah:build:
- name: spilo-rootfs-base
  matrix: &matrix
    kernel:
    - linux
    arch:
    - amd64
    - arm64
    # - ppc64le
    # - x86
  file: app/spilo/base.dockerfile
  image_names@env:
  - image: spilo-rootfs-base:${MATRIX_ARCH}
  extra_args@template:
  - --pull-always
  - --build-arg
  - DOCKERHUB_ARCH={{ .Env.MATRIX_ARCH | getDockerHubArch }}
  - --build-arg
  - MATRIX_ARCH={{ .Env.MATRIX_ARCH }}

- name: spilo-base
  env: &env
  - APP=spilo
  # source(git-tags): https://github.com/zalando/spilo
  - VERSION=2.0-p7
  matrix: *matrix
  hooks:
    before:
    - shell@env: |-
        [ -d build/spilo ] && exit 0

        git clone --depth 1 --branch ${VERSION} \
          https://github.com/zalando/spilo.git \
          build/spilo

    - shell@env: |-
        patch -u -p1 --reverse --verbose --reject-file ../../.dukkha/spilo.rej \
          -d build/spilo <app/spilo/patches/${VERSION}.patch || true

        patch -u -p1 --verbose --reject-file ../../.dukkha/spilo.rej \
          -d build/spilo <app/spilo/patches/${VERSION}.patch

    before:matrix:
    - task: buildah:build(spilo-rootfs-base)

  file@env: build/spilo/postgres-appliance/Dockerfile
  context@env: build/spilo/postgres-appliance
  image_names@env:
  - image: spilo-base:${MATRIX_ARCH}

  extra_args@template|env: |-
    {{- $base_image_name := printf "spilo-rootfs-base:%s" .Env.MATRIX_ARCH -}}
    {{- $base_image_id := os_ReadFile (getBuildahImageIDFile $base_image_name) -}}
    - --pull-never
    # - --os={{ .Env.MATRIX_KERNEL | getDockerOS }}
    # - --arch={{ .Env.MATRIX_ARCH | getDockerArch }}
    # - --variant={{ .Env.MATRIX_ARCH | getDockerArchVariant }}

    - --build-arg
    # source(git-tags): https://github.com/timescale/timescaledb
    - TIMESCALEDB=2.3.1

    - --build-arg
    - BASE_IMAGE={{ $base_image_id }}

    - --build-arg
    - PGVERSION=13

    - --build-arg
    - PGOLDVERSIONS=9.6 10 11 12

    - --build-arg
    - DEMO=false

    - --build-arg
    - COMPRESS=false

    - --build-arg
    - TIMESCALEDB_APACHE_ONLY=false

    # required, or buildah build will fail due to unable to find
    # image resulted from `builder-false` stage
    - --layers=true

- name: spilo
  env: *env
  matrix: *matrix
  hooks:
    before:matrix:
    - task: buildah:build(spilo-base)
  file@env: app/spilo/Dockerfile
  image_names@file|template: &image_names |-
    templates/image-names/no-rootfs-info/env[APP:VERSION].yml
  extra_args@template: |-
    {{- $spilo_image_name := printf "spilo-base:%s" .Env.MATRIX_ARCH -}}
    {{- $spilo_image_id := os_ReadFile (getBuildahImageIDFile $spilo_image_name) -}}
    - --pull-never
    - --build-arg
    - SPILO_IMAGE={{ $spilo_image_id }}

buildah:push:
- name: spilo
  env: *env
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix: *matrix
  image_names@file|template: *image_names
