buildah:build:
- name: sonarqube
  env@template: &env
  - APP=sonarqube
  # source(git-tags): https://github.com/SonarSource/sonarqube
  - VERSION=9.0.0.45539
  # use global es version
  - ES_VERSION={{ .Env.ES7_VERSION | trimPrefix "v" }}
  - ES_DOWNLOAD_URL_PATH=https://artifacts.elastic.co/downloads/elasticsearch/
  # TODO: update checksums when updating es version
  - ES_ARM64_CHECKSUM=871c170a7584b4c52f08ad1d8c81c1119ec953185b59f6c06733a49135651c0c314e4e43245365247763ab6d03ecdd259e2d27b01ee99dac61060896b98561a6
  - ES_AMD64_CHECKSUM=1e99fef3d61172704b657cd47556c0606a364d04e870a1544d4e3b3e395c97ba1f66d9149cde1610e68c86aa26b172e01386e3a04baf677aeba40fcc3a854031
  hooks:
    before:
    - shell@env: |-
        [ -d build/${APP} ] && exit 0

        git clone --branch ${VERSION} \
          https://github.com/SonarSource/sonarqube.git \
          build/${APP}

  matrix@file: &matrix java/matrix-11-amd64-arm64.yml
  file: java/sonarqube/Dockerfile
  image_names@file|template: &image_names |-
    templates/image-names/no-rootfs-info/env[APP:VERSION].yml
  extra_args@env|template: |-
    - --pull-always
    - --os={{ .Env.MATRIX_KERNEL | getOciOS }}
    - --arch={{ .Env.MATRIX_ARCH | getOciArch }}
    - --variant={{ .Env.MATRIX_ARCH | getOciArchVariant }}
    - --build-arg
    - APP=${APP}
    - --build-arg
    - VERSION=${VERSION}
    - --build-arg
    - TINI_VERSION=${TINI_VERSION}
    - --build-arg
    - MATRIX_ARCH=${MATRIX_ARCH}
    - --build-arg
    - DOCKERHUB_ARCH={{ .Env.MATRIX_ARCH | getDockerHubArch }}
    - --build-arg
    - MATRIX_JRE=${MATRIX_JRE}
    - --build-arg
    - MATRIX_JDK=${MATRIX_JDK}
    - --build-arg
    - ES_VERSION=${ES_VERSION}
    - --build-arg
    - ES_DOWNLOAD_URL_PATH=${ES_DOWNLOAD_URL_PATH}
    {{ if eq .Env.MATRIX_ARCH "arm64" }}
    - --build-arg
    - ES_ARCH=aarch64
    - --build-arg
    - ES_CHECKSUM=${ES_ARM64_CHECKSUM}
    {{ else if eq .Env.MATRIX_ARCH "amd64" }}
    - --build-arg
    - ES_ARCH=x86_64
    - --build-arg
    - ES_CHECKSUM=${ES_AMD64_CHECKSUM}
    {{ end }}

buildah:push:
- name: sonarqube
  env@template: *env
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix@file: *matrix
  image_names@file|template: *image_names
