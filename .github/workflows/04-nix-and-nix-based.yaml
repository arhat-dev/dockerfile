name: nix

# yamllint disable-line rule:truthy
on:
  check_run:
    types:
    - rerequested
    - requested_action
  push:
    branches:
    - master
    paths:
    - nix/**
    - .dukkha/nix/**
    - .dukkha/templates/*.yml
    - .github/workflows/*-nix*.yaml
  schedule:
  - cron: "0 4 * * *"

jobs:
#   nix:
#     strategy:
#       matrix:
#         rootfs:
#         - alpine
#         - debian
#       fail-fast: false
#     runs-on: ubuntu-20.04
#     steps:
#     - uses: actions/checkout@v2
#     - name: Install dukkha
#       run: |-
#         mkdir -p "${HOME}/bin"
#         echo "${HOME}/bin" >> $GITHUB_PATH
#
#         docker pull ghcr.io/arhat-dev/dukkha:latest
#         ctr_id=$(docker create ghcr.io/arhat-dev/dukkha:latest : 2>/dev/null)
#         docker cp ${ctr_id}:/dukkha "${HOME}/bin/dukkha"
#
#         chmod +x "${HOME}/bin/dukkha"
#
#     - name: Enable Multiarch Support
#       run: |-
#         sudo podman run --rm --privileged multiarch/qemu-user-static --reset -p yes
#
#         sudo apt update
#         sudo apt install -y qemu-user-static
#
#     - name: Build and Push nix
#       env:
#         GHCR_USER: ${{ github.actor }}
#         GHCR_PASS: ${{ secrets.GITHUB_TOKEN }}
#       run: |-
#         dukkha buildah local build nix \
#           -m rootfs=${{ matrix.rootfs }}
#
#         dukkha buildah local push nix \
#           -m rootfs=${{ matrix.rootfs }}
#
#     - name: Inspect Images
#       if: always()
#       run: |-
#         buildah images

#   renovate-base:
#     strategy:
#       matrix:
#         variant:
#         # - slim
#         - full
#         rootfs:
#         - debian
#         - alpine
#       fail-fast: false
#     runs-on: ubuntu-20.04
#     # needs:
#     # - nix
#     steps:
#     - uses: actions/checkout@v2
#     - name: Install dukkha
#       run: |-
#         mkdir -p "${HOME}/bin"
#         echo "${HOME}/bin" >> $GITHUB_PATH
#
#         docker pull ghcr.io/arhat-dev/dukkha:latest
#         ctr_id=$(docker create ghcr.io/arhat-dev/dukkha:latest : 2>/dev/null)
#         docker cp ${ctr_id}:/dukkha "${HOME}/bin/dukkha"
#
#         chmod +x "${HOME}/bin/dukkha"
#
#     - name: Enable Multiarch Support
#       run: |-
#         sudo podman run --rm --privileged multiarch/qemu-user-static --reset -p yes
#
#         sudo apt update
#         sudo apt install -y qemu-user-static
#
#     - name: Build and Push renovate-base
#       env:
#         GHCR_USER: ${{ github.actor }}
#         GHCR_PASS: ${{ secrets.GITHUB_TOKEN }}
#       run: |-
#         dukkha buildah local build \
#           renovate-${{ matrix.variant }}-base \
#           -m rootfs=${{ matrix.rootfs }}
#
#         dukkha buildah local push \
#           renovate-${{ matrix.variant }}-base \
#           -m rootfs=${{ matrix.rootfs }}
#
#     - name: Inspect Images
#       if: always()
#       run: |-
#         buildah images
#
#   renovate:
#     strategy:
#       matrix:
#         variant:
#         - slim
#         - full
#         rootfs:
#         - debian
#         - alpine
#       fail-fast: false
#     runs-on: ubuntu-20.04
#     # needs:
#     # - renovate-base
#     steps:
#     - uses: actions/checkout@v2
#     - name: Install dukkha
#       run: |-
#         mkdir -p "${HOME}/bin"
#         echo "${HOME}/bin" >> $GITHUB_PATH
#
#         docker pull ghcr.io/arhat-dev/dukkha:latest
#         ctr_id=$(docker create ghcr.io/arhat-dev/dukkha:latest : 2>/dev/null)
#         docker cp ${ctr_id}:/dukkha "${HOME}/bin/dukkha"
#
#         chmod +x "${HOME}/bin/dukkha"
#
#     - name: Enable Multiarch Support
#       run: |-
#         sudo podman run --rm --privileged multiarch/qemu-user-static --reset -p yes
#
#         sudo apt update
#         sudo apt install -y qemu-user-static
#
#     - name: Build and Push renovate
#       env:
#         GHCR_USER: ${{ github.actor }}
#         GHCR_PASS: ${{ secrets.GITHUB_TOKEN }}
#       run: |-
#         dukkha buildah local build renovate-${{ matrix.variant }} \
#           -m rootfs=${{ matrix.rootfs }}
#
#         dukkha buildah local push renovate-${{ matrix.variant }} \
#           -m rootfs=${{ matrix.rootfs }}
#
#     - name: Inspect Images
#       if: always()
#       run: |-
#         buildah images
